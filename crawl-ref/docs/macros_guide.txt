매크로와 키맵
==================

매크로와 키맵이 뭐냐구요? 간단하게 말하자면 다음과 같습니다:

명령 매크로는 해당 키를 커맨드로 바꿉니다.
키맵은 해당 키를 다른 키에 만듭니다.

조금 더 자세하게 말하자면:

대부분의 경우, 유저들은 아마도 커맨드 매크로를 쓰고 싶을 겁니다. 이것은
한 키가 일련의 커맨드들을 실행하도록 하는 일을 가능하게 해 주는데, 
(예를 들자면, 특정 키를 한 번 누르는 것으로 특정 주문을 시전하도록 하는 것) 
이 때 여러분이 지정한 그 키가 다른 명령과 겹치지는 않을까 걱정할 필요는 없습니다.
(예를 들자면, 여러분은 아이템을 버리고자 할 때 매크로가 실행되지는 않을까 하는 걱정 없이
문자나 숫자 키에 매크로를 지정할 수 있습니다).

키맵은 여러분의 키보드의 자판 배열과 이들을 누르는 문제들을 해결하기 위해
존재합니다. (예를 들어, 인식되지 않는 numpad sequences는 그들의 숫자들로
재배열될 수 있고, 외국어 키보드 자판 배열은 조금 더 편안한 배열로 수정될 수
있습니다.). 또한 층 지도, 타겟팅 모드, 확인 문구에 대한 특수한 키맵의 모음이
존재하는데, 이들은 이 상황들에 한정된 배열들을 가능하게 해줍니다.


매크로와 키맵은 어떻게 만드나요?
.=================================

가장 간단한 방법은 게임 내에서: '~'나 Ctrl-D를 누르고, 매크로를 정의하기 위해
m'을 누르고 , 매크로를 지정할 키를 고른 후에 원하는 일련의 커맨드를 입력합니다.
어떤 키들에 대해서는 (혹은 어떤 키 조합에 대해서는), 게임에서 이상한 숫자를
출력하는 경우가 있습니다. (예를 들어 Return 키에 대해서는 \{13}이 출력됩니다).
이러한 숫자들은 문자나 숫자에 해당하지 않는 키들에 대한 키 코드이며,
키 코드들은 시스템에 따라 다른 값을 가질 수도 있습니다.

기본적으로, 대부분의 대문자, 소문자, 그리고 숫자 키들은 이미 게임 내에서
특정한 기능을 수행하고 있습니다. 이들을 다른 키들로 재설정 하는 것은 당신의
자유이지만, 현재 사용되지 않는 키들로 설정하는 것이 바람직합니다.
삽입 키(Ins)나 펑션 키(F1~F12) 혹은 이들과 Ctrl, Shift 또는 둘 다를 조합한
키들을 예로 들 수 있습니다. 어떤 시스템에서는, Alt(Meta)키도 조합에 섞을 수
있습니다.

키맵을 정의하는 방법도 위와 동일합니다. 'm' 대신에 '~'를 누른 후
k'(기본값), 'x' (층 지도), 't' (타겟팅) 아니면 'c' (확인)
을 누르시면 됩니다.

특정한 매크로나 키맵을 정의한 후에는, 테스트해볼 필요가 있습니다.
마음에 드신다면, 이를 저장할 필요가 있겠지요? 모든 매크로와 키맵을
저장하려면, '~'를 누르고 's'를 눌러 저장할 수 있습니다.


macro.txt 파일
==================

매크로와 키맵 파일은 여러분의 settings/ directory에 macro.txt라는 파일로
저장됩니다. 여러분은 저장되는 위치를 바꿀 수 있는데,
init file(자세한 사항은 options_guide.txt 를 참조)내의 macro_dir option
에 원하는 경로를 설정하여 파일의 저장위치를 바꿀 수 있습니다.
macro.txt 파일은 사람이 읽을 수 있고 수정할 수도 있지만, 문자나 숫자가 아닌
키들에 대해서는 게임 내에서의 실험이나 또는 게임 외적인 경로를 통하여
이들에 대한 키 코드를 파악할 필요가 있습니다.

#'으로 시작하는 문장들은 코멘트이며, 프로그램 상에서는 무시됩니다.
매크로와 키맵을 macro.txt에 저장할 때 Crawl이 꼭 여러분의 코멘트까지 같이
저장하지는 않는다는 점에 주의할 필요가 있습니다.

각각의 매크로 정의는 정확히 두 줄로 구성됩니다. 첫 줄은
매크로 실행 키를 나타내며 "M:" 뒤에 해당 키의 글자가, 문자나 숫자가 아닌 키라면
키 코드가 나타납니다 (예를 들면 'a', 'A' 또는 \{9} 가 각각 a키, Shift-a키, Tab키에 대해 
나타납니다). 두 번째 줄은 매크로가 담고 있는 일련의 커맨드를 나타내며
"A:"뒤에 커맨드 순서가 나타납니다.
(예를 들면, "zap"은 마법 창의 a에 배정된 주문을 이전의 타겟에 대해 시전)
개별적인 매크로 정의들은 빈 줄로 구분될 필요가
있습니다.

키맵을 설정하는 경우는 정의의 첫 줄의 "M:"을
다음 중 하나로 바꾸어 쓰면 됩니다 :
"K:"  기본,
"K1:" 층 지도,
"K2:" 타겟팅 모드
"K3:" 확인.


예제
========

이 장은 여러분에게 매크로와 키맵을 어떻게 사용할 수 있을지 보여주는 예제
를 담고있습니다. 완전한 모습을 보여드리기 위하여 key line과 command line
모두를 써놨습니다. 하지만 이 매크로들은 여러분의 컴퓨터에서는 제대로 
작동하지 않을 수도 있다는 사실을 기억하세요.


@' 는 몇몇 키보드의 기본 설정 상태에서는 입력할 수 없을 수도 있습니다.
이 예제는 '@'키로  '@'를 입력할 수 있게 만듭니다.

# @: 상태창 띄우기
K:\{17}
A:@


소환술사를 플레이 하는 것은 아주 귀찮을 수 있습니다. 같은 스펠을 연속
으로 사용해야하는 경우가 자주 있기 때문이죠. 각각의 주문사용은 여러번
의 키보드 입력을 필요로 합니다. 이 매크로는 'a' 슬롯에 있는 마법을 단 
한 번의 키보드 입력으로 사용할 수 있게 만듭니다. '=' 키로 마법들의 슬롯을
바꿀 수 있다는 사실을 기억해두세요. F1 버튼으로 많은 정보를 얻을 수 있
다는 것을 다시 알려드립니다.

# F1: 'a' 스펠 사용하기
M:\{368}
A:za


방금 우리는 소환에 대해서 짚고 넘어갔습니다. 하지만 아직 소환된 소환수
에게 지시를 내리는 일이 남았습니다. 다음 매크로는 지시를 내리는 일을 손
쉽게 만들어 줄 겁니다. 이 매크로는 default_target 옵션이 활성화 되어 있어
야 합니다. (기본적으로 활성화 되어 있습니다. 자세한 사항은 crawl_options.txt를 읽어보세요).

# Tab: 아군에게 방금 공격한 적 혹은 가장 가까운 적을 공격하라고 지시하기
M:\{9}
A:ta.


다른 마법사는 주문을 사용하기 위해 약간 다른 매크로를 필요로 합니다. 
.'키를 넣어 마법을 발사하거나 따로 발사를 확인하는 과정을 거쳐야하죠.
이 매크로는 default_target 옵션이 활성화 되어 있어야 한다는 사실을 다시 
한 번 말씀드립니다.

# F1: 'a' 스펠을 방금 공격한 적 혹은 가장 가까운 적에게 사용하기
M:\{368}
A:za.


뭐, 어떤 마법사들은 언제나 방금 공격한 적만 공격하는 게 마음에 들지 않을
수도 있습니다. 다음 매크로들은 'a' 슬롯의 스펠을 사용하고, 같은 키로 공격 
가능한 대상들 중 하나를 선택한 뒤 마법을 사용할 수 있게 만듭니다.
이 예제는 다른 키맵을 통해  키가 다른 기능을 가지게 하는 것이 어떤
이점을 가질 수 있는지 역시 보여주고 있습니다.

# Shift-F1: 'a' 스펠 시전하기
M:\{1392}
A:za

# Shift-F1: 목표 설정 모드에서 대상을 차례대로 선택하기
K2:\{1392}
A:+

# F1: 목표 설정 모드에서 대상에게 공격하기
K2:\{368}
A:.
